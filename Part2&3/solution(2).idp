/** 
* Skeleton for the second part of the project. 
*
* No names in this skeleton can be changed, you can add things to the vocabulary and you should definitely add stuff to the theory. 
*/

include<LTC>

LTCvocabulary warehousevoc{
	type Time
	Start: Time
	partial Next(Time):Time

	type pallet
	type action constructed from {rotateRight, rotateLeft, moveFront, moveBack, pickUp(pallet), putDown(pallet)}	
	execute(Time,action)

	on(Time,pallet,pallet)
	carried(Time,pallet)

	type xco isa nat
	type yco isa nat	
	type location constructed from {grid(xco,yco)}
	inaccessible(location)
	robotposition(Time): location
	position(Time,pallet): location
	
	type dir constructed from {north, east, south, west}
	facing(Time): dir
	
	type height isa nat
	ceiling: height
}

theory solution: warehousevoc{

}


theory verification1: warehousevoc{
	//Verify something here
}

procedure verification1proc(struc){
	//Do something here: verify verification1 in the context of structure struc. 
	//At least print whether the verification is satisified or not.
}

theory verification2: warehousevoc{
	//Verify something here
}

procedure verification2proc(struc){
	//Do something here: verify verification2 in the context of structure struc. 
	//At least print whether the verification is satisified or not.
}

theory verification3: warehousevoc{
	//Verify something here
}

procedure verification3proc(struc){
	//Do something here: verify verification3 in the context of structure struc. 
	//At least print whether the verification is satisified or not.
}


procedure allVerifications(){
	strucToCheck = verStruc
	verification1proc(strucToCheck)
	verification2proc(strucToCheck)
	verification3proc(strucToCheck)
}


structure verStruc:warehousevoc{
	Time = {0..16}
	Start = 0
	Next = {0->1;1->2;2->3;3->4;4->5;5->6;6->7;7->8;8->9;9->10;10->11;11->12;12->13;13->14;14->15;15->16}
	xco={1..3}
	yco={1..3}
	height = {0..3}
	pallet={p1;p2}
	inaccessible={grid(3,2);grid(2,2)}
	ceiling = 3
}


procedure main(){
    //Depending on what you wish to do, execute one of the following methods:
	 
    //This method (defined in the instances.idp) checks some given worlds for consistency
	check()

    //This method lets you walk through your solutions interactively
	simulate_interactive(solution,verStruc)
	
    //This method walks randomly trough the solutions, 5 steps deep
	simulate_random(solution,verStruc,5)
	
    //This method (defined above) simply searches models of your theory
	stdoptions.nbmodels=5 //Find 5 models	
	printmodels(modelexpand(solution,verStruc))
	
}
